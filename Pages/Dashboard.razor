@page "/dashboard"
@using FE_HumanResources.Entities
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<RadzenBody Gap="1rem" Class="rz-p-sm-12">

    @* BREADCRUM *@
    <RadzenBreadCrumb>
        <Template Context="item">
            <RadzenBadge Text="@item.Text" IsPill="true" />
        </Template>
        <ChildContent>
            <RadzenBreadCrumbItem Path="/" Text="Inicio" />
            <RadzenBreadCrumbItem Path="/dashboard" Text="Panel de Información" />
        </ChildContent>
    </RadzenBreadCrumb>
    <br>
    @* BREADCRUM *@
    <RadzenRow class="rz-text-align-center rz-border-info-light" Gap="1rem">
        <RadzenColumn Size="12" SizeXS="11" SizeSM="10" SizeMD="9" SizeLG="8" SizeXL="7" SizeXX="6"
            class="rz-background-color-info-lighter rz-color-on-info-lighter rz-p-5">
            <p>Hola <strong>@username</strong></p>
        </RadzenColumn>
    </RadzenRow>

</RadzenBody>

@code {
    private UserEntity? UserEntity = new UserEntity();
    string username = "";
    protected override async Task OnInitializedAsync()
    {

        UserEntity = null;
        string? usr = await LocalStorage.GetItemAsync<string>("logedUser");

        if (!string.IsNullOrEmpty(usr))
        {
            UserEntity = JsonConvert.DeserializeObject<UserEntity>(usr);
            username = UserEntity.UserName + " " + UserEntity.LastName;
        }
        else
        {
            await LocalStorage.ClearAsync();
            NavigationManager.NavigateTo("login", true);
        }
    }
}
