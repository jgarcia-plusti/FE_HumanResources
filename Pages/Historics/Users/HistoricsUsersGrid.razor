@page "/historicusergrid"
@using System.Net.Http.Headers
@using FE_HumanResources.Models
@using FE_HumanResources.Entities
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ContextMenuService ContextMenuService

<RadzenBody Gap="1rem" Class="rz-p-sm-12" Style="height:100vh; overflow-y:auto;">
    <RadzenBreadCrumb>
        <Template Context="item">
            <RadzenBadge Text="@item.Text" IsPill="true" />
        </Template>
        <ChildContent>
            <RadzenBreadCrumbItem Path="/" Text="Histórico" />
            <RadzenBreadCrumbItem Path="/historicusergrid" Text="Histórico de Usuarios" />
        </ChildContent>
    </RadzenBreadCrumb>
    <br />
        <RadzenButton Text="Actualizar" Click="@Reset" Style="margin-bottom: 20px;" />
        <br />
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple" 
        AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                        Data="@historicModel" TItem="HistoricByUserEntity" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" 
                        SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedHistorics >
            <Columns>
            <RadzenDataGridColumn TItem="HistoricByUserEntity" Property="ActionType" Title="Tipo de Accion" Frozen="true" Width="160px" />
            <RadzenDataGridColumn TItem="HistoricByUserEntity" Property="Module" Title="Descripción" Frozen="true" Width="160px" />
            <RadzenDataGridColumn TItem="HistoricByUserEntity" Property="Register" Title="Registro" Width="160px" />
            <RadzenDataGridColumn TItem="HistoricByUserEntity" Property="Date" Title="Fecha" FormatString="{0:d}" Width="200px" />
            <RadzenDataGridColumn TItem="HistoricByUserEntity" Property="UserName" Title="Usuario" Width="300px" />
            </Columns>
        </RadzenDataGrid>
         <br />
        <RadzenButton Text="Regresar" Click="@GoBack" Style="margin-bottom: 20px;" />
</RadzenBody>
           
@code {
    private IEnumerable<HistoricByUserEntity> historicModel;
    private IList<HistoricByUserEntity> selectedHistorics;

    protected override async Task OnInitializedAsync()
    {
        StateHasChanged();
        await base.OnInitializedAsync();
        await Reset();
    }

    private async Task Reset()
    {
        string? jwt = await LocalStorage.GetItemAsync<string>("jwt");
        if (!string.IsNullOrEmpty(jwt))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
            HttpResponseMessage response = await Http.GetAsync("api/Historic/GetHitoricUser");
            if (response.IsSuccessStatusCode)
            {
                string content = response.Content.ReadAsStringAsync().Result;
                historicModel = JsonConvert.DeserializeObject<IEnumerable<HistoricByUserEntity>>(content);
                if (historicModel == null)
                {
                    
                }
                else
                    selectedHistorics = new List<HistoricByUserEntity>() { historicModel.FirstOrDefault() };
            }
            else
            {
                await LocalStorage.ClearAsync();
                NavigationManager.NavigateTo("login", true);
            }

        }
        else
        {
            await LocalStorage.ClearAsync();
            NavigationManager.NavigateTo("login", true);
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/dashboard");
    }

    void OnCellContextMenu(DataGridCellMouseEventArgs<HistoricByUserEntity> args)
    {
        selectedHistorics = new List<HistoricByUserEntity>() { args.Data };

        ContextMenuService.Open(args,
            new List<ContextMenuItem> {
                new ContextMenuItem(){ Text = "Ver", Value = 1, Icon = "search" }
                        },
            (e) =>
            {
                if (e.Value.ToString() == "1")
                {
                    NavigationManager.NavigateTo($"");
                }
            }
         );
    }
}
